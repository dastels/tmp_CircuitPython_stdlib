--- <CPython-3.4.9>/imghdr.py
+++ lib/imghdr.py
@@ -1,6 +1,5 @@
 """Recognize image file formats based on their first few bytes."""
 
-__all__ = ["what"]
 
 #-------------------------#
 # Recognize image headers #
@@ -40,7 +39,7 @@
 tests.append(test_jpeg)
 
 def test_png(h, f):
-    if h.startswith(b'\211PNG\r\n\032\n'):
+    if h[:8] == b'\211PNG\r\n\032\n':                                           ###
         return 'png'
 
 tests.append(test_png)
@@ -61,7 +60,7 @@
 
 def test_rgb(h, f):
     """SGI image library"""
-    if h.startswith(b'\001\332'):
+    if h[:2] == b'\001\332':                                                    ###
         return 'rgb'
 
 tests.append(test_rgb)
@@ -92,63 +91,22 @@
 
 def test_rast(h, f):
     """Sun raster file"""
-    if h.startswith(b'\x59\xA6\x6A\x95'):
+    if h[:4] == (b'\x59\xA6\x6A\x95'):                                          ###
         return 'rast'
 
 tests.append(test_rast)
 
 def test_xbm(h, f):
     """X bitmap (X10 or X11)"""
-    if h.startswith(b'#define '):
+    if h[:8] == b'#define ':                                                    ###
         return 'xbm'
 
 tests.append(test_xbm)
 
 def test_bmp(h, f):
-    if h.startswith(b'BM'):
+    if h[:2] == b'BM':                                                          ###
         return 'bmp'
 
 tests.append(test_bmp)
 
-#--------------------#
-# Small test program #
-#--------------------#
-
-def test():
-    import sys
-    recursive = 0
-    if sys.argv[1:] and sys.argv[1] == '-r':
-        del sys.argv[1:2]
-        recursive = 1
-    try:
-        if sys.argv[1:]:
-            testall(sys.argv[1:], recursive, 1)
-        else:
-            testall(['.'], recursive, 1)
-    except KeyboardInterrupt:
-        sys.stderr.write('\n[Interrupted]\n')
-        sys.exit(1)
-
-def testall(list, recursive, toplevel):
-    import sys
-    import os
-    for filename in list:
-        if os.path.isdir(filename):
-            print(filename + '/:', end=' ')
-            if recursive or toplevel:
-                print('recursing down:')
-                import glob
-                names = glob.glob(os.path.join(filename, '*'))
-                testall(names, recursive, 0)
-            else:
-                print('*** directory (use -r) ***')
-        else:
-            print(filename + ':', end=' ')
-            sys.stdout.flush()
-            try:
-                print(what(filename))
-            except OSError:
-                print('*** not found ***')
-
-if __name__ == '__main__':
-    test()
+