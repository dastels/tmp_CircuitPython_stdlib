--- <CPython-3.4.9>/reprlib.py
+++ lib/reprlib.py
@@ -1,13 +1,10 @@
 """Redo the builtin repr() (representation) but with limits on most sizes."""
 
-__all__ = ["Repr", "repr", "recursive_repr"]
 
 import builtins
 from itertools import islice
-try:
-    from _thread import get_ident
-except ImportError:
-    from _dummy_thread import get_ident
+def get_ident():                                                                ###
+    return -1                                                                   ###
 
 def recursive_repr(fillvalue='...'):
     'Decorator to make a repr function return fillvalue for a recursive call'
@@ -26,11 +23,6 @@
                 repr_running.discard(key)
             return result
 
-        # Can't use functools.wraps() here because of bootstrap issues
-        wrapper.__module__ = getattr(user_function, '__module__')
-        wrapper.__doc__ = getattr(user_function, '__doc__')
-        wrapper.__name__ = getattr(user_function, '__name__')
-        wrapper.__annotations__ = getattr(user_function, '__annotations__', {})
         return wrapper
 
     return decorating_function
@@ -83,7 +75,7 @@
         return self._repr_iterable(x, level, '[', ']', self.maxlist)
 
     def repr_array(self, x, level):
-        header = "array('%s', [" % x.typecode
+        header = "array('?', ["                                                 ### AttributeError: 'array' object has no attribute 'typecode'
         return self._repr_iterable(x, level, header, '])', self.maxarray)
 
     def repr_set(self, x, level):
@@ -155,3 +147,4 @@
 
 aRepr = Repr()
 repr = aRepr.repr
+