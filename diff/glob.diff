--- <CPython-3.4.9>/glob.py
+++ lib/glob.py
@@ -4,7 +4,6 @@
 import re
 import fnmatch
 
-__all__ = ["glob", "iglob"]
 
 def glob(pathname):
     """Return a list of paths matching a pathname pattern.
@@ -98,13 +97,5 @@
     return path[0] in ('.', b'.'[0])
 
 def escape(pathname):
-    """Escape all special characters.
-    """
-    # Escaping is done by wrapping any of "*?[" between square brackets.
-    # Metacharacters do not work in the drive part and shouldn't be escaped.
-    drive, pathname = os.path.splitdrive(pathname)
-    if isinstance(pathname, bytes):
-        pathname = magic_check_bytes.sub(br'[\1]', pathname)
-    else:
-        pathname = magic_check.sub(r'[\1]', pathname)
-    return drive + pathname
+    raise NotImplementedError('ure.sub is missing')                             ###
+