--- <CPython-3.4.9>/json/encoder.py
+++ lib/json/encoder.py
@@ -11,8 +11,6 @@
 except ImportError:
     c_make_encoder = None
 
-ESCAPE = re.compile(r'[\x00-\x1f\\"\b\f\n\r\t]')
-ESCAPE_ASCII = re.compile(r'([\\"]|[^\ -~])')
 HAS_UTF8 = re.compile(b'[\x80-\xff]')
 ESCAPE_DCT = {
     '\\': '\\\\',
@@ -35,8 +33,14 @@
 
     """
     def replace(match):
-        return ESCAPE_DCT[match.group(0)]
-    return '"' + ESCAPE.sub(replace, s) + '"'
+        return ESCAPE_DCT[match]                                                ###
+    res = '"'                                                                   ###
+    for c in s:                                                                 ###
+        if c <= '\x1f' or c in '\\"\b\f\n\r\t':                                 ###
+            res += replace(c)                                                   ###
+        else:                                                                   ###
+            res += c                                                            ###
+    return res + '"'                                                            ###
 
 
 def py_encode_basestring_ascii(s):
@@ -44,7 +48,7 @@
 
     """
     def replace(match):
-        s = match.group(0)
+        s = match                                                               ###
         try:
             return ESCAPE_DCT[s]
         except KeyError:
@@ -58,7 +62,13 @@
                 s1 = 0xd800 | ((n >> 10) & 0x3ff)
                 s2 = 0xdc00 | (n & 0x3ff)
                 return '\\u{0:04x}\\u{1:04x}'.format(s1, s2)
-    return '"' + ESCAPE_ASCII.sub(replace, s) + '"'
+    res = '"'                                                                   ###
+    for c in s:                                                                 ###
+        if c < ' ' or c > '~' or c in '\\"':                                    ###
+            res += replace(c)                                                   ###
+        else:                                                                   ###
+            res += c                                                            ###
+    return res + '"'                                                            ###
 
 
 encode_basestring_ascii = (
@@ -431,3 +441,4 @@
             if markers is not None:
                 del markers[markerid]
     return _iterencode
+